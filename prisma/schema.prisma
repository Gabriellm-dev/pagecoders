datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  cpf              String   @id
  email            String   @unique
  password         String
  registrationDate DateTime @default(now())
  name             String
  street           String?
  number           Int?
  neighborhood     String?
  city             String?
  state            String?
  zip              String?
  books            Book[]
  loans            Loan[]
  userRatings      UserRating[]
}

model Book {
  code             Int         @id @default(autoincrement())
  userCpf          String
  title            String
  publisher        String?
  publicationDate  DateTime?
  editionNumber    Int?
  authors          String?
  genre            String?
  available        Boolean     @default(true)
  user             User        @relation(fields: [userCpf], references: [cpf])
  loans            Loan[]
}

model Loan {
  loanId              Int       @id @default(autoincrement())
  userCpf             String
  bookCode            Int
  loanDate            DateTime  @default(now())
  expectedReturnDate  DateTime?
  returnDate          DateTime?
  loanAuthorized      Boolean   @default(false)
  loanRequested       Boolean   @default(true)
  user                User      @relation(fields: [userCpf], references: [cpf])
  book                Book      @relation(fields: [bookCode], references: [code])
  loanRatings         LoanRating[]
}

model LoanRating {
  ratingId       Int       @id @default(autoincrement())
  loanId         Int
  bookRating     Int?
  userRating     Int?
  comment        String?
  loan           Loan      @relation(fields: [loanId], references: [loanId])
  userRatings    UserRating[]
}

model UserRating {
  userCpf        String
  ratingId       Int
  user           User      @relation(fields: [userCpf], references: [cpf])
  rating         LoanRating @relation(fields: [ratingId], references: [ratingId])

  @@id([userCpf, ratingId])
}
